{"version":3,"file":"js/264.bundle.js","mappings":"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","sources":["webpack:///node_modules/helper-vue-components/src/DeepWatcherMethods.vue","webpack:///./node_modules/helper-vue-components/src/DeepWatcherMethods.vue?b1ac","webpack:///./node_modules/helper-vue-components/src/DeepWatcherMethods.vue","webpack:///./node_modules/helper-vue-components/src/DeepData.vue?d1ec","webpack:///node_modules/helper-vue-components/src/DeepData.vue","webpack:///./node_modules/helper-vue-components/src/DeepData.vue","webpack:///./node_modules/helper-vue-components/src/DataTransmitting.vue?b017","webpack:///node_modules/helper-vue-components/src/DataTransmitting.vue","webpack:///./node_modules/helper-vue-components/src/DataTransmitting.vue","webpack:///./node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/DropdownNavigationLink.vue?c122","webpack:///node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/DropdownNavigationLink.vue","webpack:///./node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/DropdownNavigationLink.vue","webpack:///./node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/NavigationLink/Component.vue?cbfc","webpack:///node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/NavigationLink/Component.vue","webpack:///./node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/NavigationLink/Component.vue","webpack:///./node_modules/helper-vue-components/src/NavigationBar/NavigationLinks/DropdownNavigationLink/NavigationLink/Component.vue?1579","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"sourcesContent":["<script>\r\n    export default {\r\n        methods: {\r\n            //Only work with reference to property to change\r\n            changeDeepData(propertyToChange, deepPropertyName, deepPropertyValue) {\r\n                if (propertyToChange && propertyToChange.data) {\r\n                    propertyToChange.data[deepPropertyName] = deepPropertyValue\r\n                }\r\n            },\r\n            initDeepWatcher(watcherName, handler) {\r\n                let self = this\r\n                this.$watch(watcherName, (newValue, oldValue) => {\r\n                    if (typeof newValue !== 'undefined') {\r\n                        handler(newValue, oldValue)\r\n                    }\r\n                    //self.$forceUpdate()\r\n                }, {\r\n                    immediate: true,\r\n                    deep: true,\r\n                    flush: 'sync'\r\n                })\r\n            },\r\n            refreshDataValue(subObjectName) {\r\n                this.changeDataValue(subObjectName, this[subObjectName])\r\n            },\r\n            changeDataValue(dataName, newValue) {\r\n                if (this.$options.propsData[dataName]) {\r\n                    this[dataName] = structuredClone(newValue)\r\n                    //this.$emit('update:' + dataName, newValue)\r\n                }\r\n                else {\r\n                    this[dataName] = structuredClone(newValue)\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","import mod from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DeepWatcherMethods.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DeepWatcherMethods.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./DeepWatcherMethods.vue?vue&type=script&lang=js&\"\nexport * from \"./DeepWatcherMethods.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DeepData.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DeepData.vue?vue&type=script&lang=js&\"","<script>\r\n\r\n    // Doesn't work, set child components data\r\n\r\n    import DeepWatcherMethods from './DeepWatcherMethods.vue'\r\n\r\n    export default {\r\n        mixins: [\r\n            DeepWatcherMethods\r\n        ],\r\n        data() {\r\n            return {\r\n                deepProperties: {}\r\n            }\r\n        },\r\n        mounted() {\r\n            let self = this\r\n            for (const [deepPropertyName, subDataNames] of Object.entries(this.deepProperties)) {\r\n                //subDataNames.forEach((subDataName) => { \r\n                for (const [subObjectName, subObjectPropertyName] of Object.entries(self.getSubDataNamesObject(subDataNames, deepPropertyName))) {\r\n                    self.initDeepWatcher(subObjectName, (newSubObjectValue) => {\r\n                        if (Array.isArray(newSubObjectValue)) {\r\n                            let subDataArray = self[subObjectName]\r\n                            let hasChages = false\r\n                            subDataArray.forEach((subData) => {\r\n                                if (subData && subData.data && subData.data[subObjectPropertyName] != self[deepPropertyName]) {\r\n                                    self.changeDeepData(subData, subObjectPropertyName, self[deepPropertyName])\r\n                                    hasChages = true\r\n                                }\r\n                            })\r\n                            if (hasChages) {\r\n                                self[subObjectName] = structuredClone(subDataArray)\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (newSubObjectValue && newSubObjectValue.data && newSubObjectValue.data[subObjectPropertyName] != self[deepPropertyName]) {\r\n                                self.changeDeepData(self[subObjectName], subObjectPropertyName, self[deepPropertyName])\r\n                                self.refreshDataValue(subObjectName)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                self.initDeepWatcher(deepPropertyName, (newDeepPropertyValue) => {\r\n                    //subDataNames.forEach((subDataName) => {\r\n                    for (const [subObjectName, subObjectPropertyName] of Object.entries(self.getSubDataNamesObject(subDataNames, deepPropertyName))) {\r\n                        if (Array.isArray(self[subObjectName])) {\r\n                            let subDataArray = self[subObjectName]\r\n                            let hasChages = false\r\n                            subDataArray.forEach((subData) => {\r\n                                if (subData && subData.data && subData.data[subObjectPropertyName] != self[deepPropertyName]) {\r\n                                    self.changeDeepData(subData, subObjectPropertyName, newDeepPropertyValue)\r\n                                    hasChages = true\r\n                                }\r\n                            })\r\n                            if (hasChages) {\r\n                                self[subObjectName] = structuredClone(subDataArray)\r\n                            }\r\n                            self.refreshDataValue(subObjectName)\r\n                        }\r\n                        else {\r\n                            if (self[subObjectName] && self[subObjectName].data && self[subObjectName].data[subObjectPropertyName] != self[deepPropertyName]) {\r\n                                self.changeDeepData(self[subObjectName], subObjectPropertyName, newDeepPropertyValue)\r\n                                self.refreshDataValue(self[subObjectName])\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        methods: {\r\n            getSubDataNamesObject(subDataNames, deepPropertyName) {\r\n                if (Array.isArray(subDataNames)) {\r\n                    let subDataNamesObject = {}\r\n                    subDataNames.forEach((subDataName) => {\r\n                        subDataNamesObject[subDataName] = deepPropertyName\r\n                    })\r\n                    return subDataNamesObject\r\n                }\r\n                else {\r\n                    return subDataNames\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./DeepData.vue?vue&type=script&lang=js&\"\nexport * from \"./DeepData.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DataTransmitting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../vue-loader/lib/index.js??vue-loader-options!./DataTransmitting.vue?vue&type=script&lang=js&\"","<script>\r\n    import DeepWatcherMethods from './DeepWatcherMethods.vue'\r\n\r\n    export default {\r\n        mixins: [\r\n            DeepWatcherMethods\r\n        ],\r\n        data() {\r\n            return {\r\n                dataTransmits: {}\r\n            }\r\n        },\r\n        mounted() {\r\n            for (const [dataName, propertyName] of Object.entries(this.dataTransmits)) {\r\n                this.changeDataValue(dataName, this[propertyName])\r\n                this.initDeepWatcher(propertyName, (newValue, oldValue) => {\r\n                    if (self[dataName] !== newValue) {\r\n                        this.changeDataValue(dataName, newValue)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./DataTransmitting.vue?vue&type=script&lang=js&\"\nexport * from \"./DataTransmitting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../vue-loader/lib/index.js??vue-loader-options!./DropdownNavigationLink.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../vue-loader/lib/index.js??vue-loader-options!./DropdownNavigationLink.vue?vue&type=script&lang=js&\"","<script>\r\n    import DeepData from '../../../../../helper-vue-components/src/DeepData.vue'\r\n    import DataTransmitting from '../../../../../helper-vue-components/src/DataTransmitting.vue'\r\n\r\n    export default {\r\n        mixins: [\r\n            DeepData,\r\n            DataTransmitting,\r\n        ],\r\n        props: {\r\n            dropdown_section: {\r\n                type: Object\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                deepProperties: {\r\n                    'dropdownLinkId': {\r\n                        'dropdown_section': 'dropdown_link_id'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            dropdownLinkId() {\r\n                return \"dropdown\" + this._uid\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./DropdownNavigationLink.vue?vue&type=script&lang=js&\"\nexport * from \"./DropdownNavigationLink.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../../vue-loader/lib/index.js??vue-loader-options!./Component.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../vue-loader/lib/index.js??vue-loader-options!./Component.vue?vue&type=script&lang=js&\"","<template lang=\"pug\">\r\n    include Template.pug\r\n</template>\r\n\r\n<script>\r\n    import DropdownNavigationLink from '../DropdownNavigationLink.vue'\r\n\r\n    export default {\r\n        mixins: [\r\n            DropdownNavigationLink,\r\n        ],\r\n        props: {\r\n            icon_class: {\r\n                type: String\r\n            },\r\n            badge_content: {\r\n                type: String\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","import { render, staticRenderFns } from \"./Component.vue?vue&type=template&id=6bd4ef81&lang=pug&\"\nimport script from \"./Component.vue?vue&type=script&lang=js&\"\nexport * from \"./Component.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('li',{staticClass:\"nav-item dropdown no-arrow\"},[_c('a',{staticClass:\"nav-link navigation-link dropdown-toggle\",attrs:{\"id\":_vm.dropdownLinkId,\"href\":\"#\",\"role\":\"button\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[(_vm.icon_class)?_c('i',{class:_vm.icon_class}):_vm._e(),_vm._v(_vm._s(_vm.badge_content))]),_c('dynamic-component',{attrs:{\"component_infos\":_vm.dropdown_section}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"names":["methods","changeDeepData","propertyToChange","deepPropertyName","deepPropertyValue","data","initDeepWatcher","watcherName","handler","this","$watch","newValue","oldValue","immediate","deep","flush","refreshDataValue","subObjectName","changeDataValue","dataName","$options","propsData","structuredClone","mixins","DeepWatcherMethods","deepProperties","mounted","self","subDataNames","Object","entries","subObjectPropertyName","getSubDataNamesObject","newSubObjectValue","Array","isArray","subDataArray","hasChages","forEach","subData","newDeepPropertyValue","subDataNamesObject","subDataName","dataTransmits","propertyName","props","dropdown_section","type","computed","dropdownLinkId","_uid","icon_class","String","badge_content","_vm","_c","_self","staticClass","attrs","class","_e","_v","_s","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports"],"sourceRoot":""}